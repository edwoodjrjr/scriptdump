{
     "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json", 
     "contentVersion": "3.1.1.0", 
     "parameters": {
          "adminUsername": {
               "defaultValue": "azureuser", 
               "metadata": {
                    "description": "User name for the Virtual Machine."
               }, 
               "type": "string"
          }, 
          "adminPassword": {
               "metadata": {
                    "description": "Password to login to the Virtual Machine."
               }, 
               "type": "securestring"
          }, 
          "dnsLabel": {
               "defaultValue": "REQUIRED", 
               "metadata": {
                    "description": "Unique DNS Name for the Public IP address used to access the Virtual Machine"
               }, 
               "type": "string"
          }, 
          "bigIpVersion": {
            "allowedValues": [
                "latest", 
                "13.0.021", 
                "12.1.24"
            ], 
            "defaultValue": "13.0.021", 
            "metadata": {
                "description": "F5 BIG-IP version you want to use."
            }, 
            "type": "string"
        }, 
          "instanceName": {
               "defaultValue": "f5vm01", 
               "metadata": {
                    "description": "Name of the Virtual Machine."
               }, 
               "type": "string"
          }, 
          "instanceType": {
               "allowedValues": [
                    "Standard_A2", 
                    "Standard_A3", 
                    "Standard_A4", 
                    "Standard_A5", 
                    "Standard_A6", 
                    "Standard_A7", 
                    "Standard_A8", 
                    "Standard_A9", 
                    "Standard_D2", 
                    "Standard_D3", 
                    "Standard_D4", 
                    "Standard_D11", 
                    "Standard_D12", 
                    "Standard_D13", 
                    "Standard_D14", 
                    "Standard_DS2", 
                    "Standard_DS3", 
                    "Standard_DS4", 
                    "Standard_DS11", 
                    "Standard_DS12", 
                    "Standard_DS13", 
                    "Standard_DS14",
                    "Standard_D2_v2",                   
                    "Standard_D3_v2",                    
                    "Standard_D4_v2", 
                    "Standard_D5_v2", 
                    "Standard_D11_v2", 
                    "Standard_D12_v2", 
                    "Standard_D13_v2", 
                    "Standard_D14_v2", 
                    "Standard_D15_v2",
                    "Standard_DS2_v2",
                    "Standard_DS3_v2",
                    "Standard_DS4_v2", 
                    "Standard_DS5_v2", 
                    "Standard_DS11_v2", 
                    "Standard_DS12_v2", 
                    "Standard_DS13_v2", 
                    "Standard_DS14_v2", 
                    "Standard_DS15_v2",
                    "Standard_F2", 
                    "Standard_F4", 
                    "Standard_F8",
                    "Standard_F2S", 
                    "Standard_F4S", 
                    "Standard_F8S"
               ], 
               "defaultValue": "Standard_D2_v2", 
               "metadata": {
                    "description": "Azure instance size of the Virtual Machine."
               }, 
               "type": "string"
          }, 
          "userImageStorageAccountName": {
               "type": "string",
               "metadata": {
                    "description": "The name of the storage account containing the vhd to create the WAFs from."
               }
          },
          "containerName": {
               "type": "string",
               "metadata": {
                    "description": "The name of the Container in the above storage account."
               }
          },
          "vhdName": {
               "type": "string",
               "metadata": {
                    "description": "The name of the VHD to use for the building the VM."
               }
          },
          "restrictedSrcAddress": {
               "defaultValue": "*", 
               "metadata": {
                    "description": "This field restricts management access to a specific network or address. Enter an IP address or address range in CIDR notation, or asterisk for all sources"
               }, 
               "type": "string"
          }, 
          "tagValues": {
               "defaultValue": {
                    "application": "APP", 
                    "cost": "COST", 
                    "environment": "ENV", 
                    "group": "GROUP", 
                    "owner": "OWNER"
               }, 
               "type": "object"
          }
     }, 
     "variables": {
          "bigIpNicPortMap": {
               "1": {
                    "Port": "[parameters('bigIpVersion')]"
               }, 
               "2": {
                    "Port": "443"
               }, 
               "3": {
                    "Port": "443"
               }, 
               "4": {
                    "Port": "443"
               }, 
               "5": {
                    "Port": "443"
               }, 
               "6": {
                    "Port": "443"
               }
          }, 
          "bigIpVersionPortMap": {
               "12.1.24": {
                    "Port": 443
               }, 
               "13.0.021": {
                    "Port": 8443
               }, 
               "443": {
                    "Port": 443
               }, 
               "latest": {
                    "Port": 8443
               }
          }, 
          "apiVersion": "2015-06-15", 
          "computeApiVersion": "2015-06-15", 
          "networkApiVersion": "2015-06-15", 
          "storageApiVersion": "2015-06-15", 
          "location": "[resourceGroup().location]", 
          "singleQuote": "'", 
          "f5CloudLibsTag": "v3.0.2", 
          "verifyHash": "[concat(variables('singleQuote'), 'cli script /Common/verifyHash {\nproc script::run {} {\n        if {[catch {\n            set hashes(f5-cloud-libs.tar.gz) 862f7c19396088ab012fda7c2b262621c17f134b1d39d7a4d0b765eaf92f3ddc7354716a4f546fabb866df9876e1baed5799ae4a2c9d0ea6f01f79a38b9d3b3e\n            set hashes(f5-cloud-libs-aws.tar.gz) 2566f515fb46d89f5a245079b0efdad60fd78327c352e567bd5d573eb2ee0093d167a2f054b2408bd7df49c5debc4218074fdb50cfe135bb80ccc6c303a03f72\n            set hashes(f5-cloud-libs-azure.tar.gz) 9d4dc6779a5d25253832598d42681defa54c5f4521a70ba8e053179c262cdf0d5c8d6a3d458ea21da1d95212792b099bf2721ddbe175eed035cd1e00647124cf\n            set hashes(asm-policy-linux.tar.gz) 63b5c2a51ca09c43bd89af3773bbab87c71a6e7f6ad9410b229b4e0a1c483d46f1a9fff39d9944041b02ee9260724027414de592e99f4c2475415323e18a72e0\n            set hashes(f5.http.v1.2.0rc4.tmpl) 47c19a83ebfc7bd1e9e9c35f3424945ef8694aa437eedd17b6a387788d4db1396fefe445199b497064d76967b0d50238154190ca0bd73941298fc257df4dc034\n            set hashes(f5.http.v1.2.0rc6.tmpl) 811b14bffaab5ed0365f0106bb5ce5e4ec22385655ea3ac04de2a39bd9944f51e3714619dae7ca43662c956b5212228858f0592672a2579d4a87769186e2cbfe\n            set hashes(f5.http.v1.2.0rc7.tmpl) 21f413342e9a7a281a0f0e1301e745aa86af21a697d2e6fdc21dd279734936631e92f34bf1c2d2504c201f56ccd75c5c13baa2fe7653213689ec3c9e27dff77d\n            set hashes(f5.aws_advanced_ha.v1.3.0rc1.tmpl) 9e55149c010c1d395abdae3c3d2cb83ec13d31ed39424695e88680cf3ed5a013d626b326711d3d40ef2df46b72d414b4cb8e4f445ea0738dcbd25c4c843ac39d\n            set hashes(f5.aws_advanced_ha.v1.4.0rc1.tmpl) de068455257412a949f1eadccaee8506347e04fd69bfb645001b76f200127668e4a06be2bbb94e10fefc215cfc3665b07945e6d733cbe1a4fa1b88e881590396\n            set hashes(asm-policy.tar.gz) 2d39ec60d006d05d8a1567a1d8aae722419e8b062ad77d6d9a31652971e5e67bc4043d81671ba2a8b12dd229ea46d205144f75374ed4cae58cefa8f9ab6533e6\n            set hashes(deploy_waf.sh) 4db3176b45913a5e7ccf42ab9c7ac9d7de115cdbd030b9e735946f92456b6eb433087ed0e98ac4981c76d475cd38f4de49cd98c063e13d50328a270e5b3daa4a\n            set hashes(f5.policy_creator.tmpl) 54d265e0a573d3ae99864adf4e054b293644e48a54de1e19e8a6826aa32ab03bd04c7255fd9c980c3673e9cd326b0ced513665a91367add1866875e5ef3c4e3a\n\n            set file_path [lindex $tmsh::argv 1]\n            set file_name [file tail $file_path]\n\n            if {![info exists hashes($file_name)]} {\n                tmsh::log err \"No hash found for $file_name\"\n                exit 1\n            }\n\n            set expected_hash $hashes($file_name)\n            set computed_hash [lindex [exec /usr/bin/openssl dgst -r -sha512 $file_path] 0]\n            if { $expected_hash eq $computed_hash } {\n                exit 0\n            }\n            tmsh::log err \"Hash does not match for $file_path\"\n            exit 1\n        }]} {\n            tmsh::log err {Unexpected error in verifyHash}\n            exit 1\n        }\n    }\n    script-signature VwqAYsu1/TM/B7OPgCB2SXyiQ5s0MJH6qqzrypWaoZcRtXc9w9jNz8YwmqQyFn7TWTqCCLxmnMT4bmLzqNIYWesegv7w5KcBMwA8C0NTOebjHLkqKPzr2P68NiVzPN1/gxp3Y2i2e9zpnvy8PXcWRK3PkauO8lVSE7TJ07/uydvjg9t3GEjN449TUIZ+fx0NhqxS9VD6HDqv66FKgVcAeiomqrB2YQeawE4oShnbV2ULBP9IN8X/Rp9cb2gw1IPYZcLneP/rtgkMHOPmnzPV4u+tEowPzIjAo9mTV2J7e4z50peN3vdD7ThO1aPdcd5dfxbRqWZtlyV/pDPPHVVEdg==\n    signing-key /Common/f5-irule\n}', variables('singleQuote'))]", 
          "installCloudLibs": "[concat(variables('singleQuote'), '#!/bin/bash\necho about to execute\nchecks=0\nwhile [ $checks -lt 120 ]; do echo checking mcpd\n/usr/bin/tmsh -a show sys mcp-state field-fmt | grep -q running\nif [ $? == 0 ]; then\necho mcpd ready\nbreak\nfi\necho mcpd not ready yet\nlet checks=checks+1\nsleep 1\ndone\necho loading verifyHash script\n/usr/bin/tmsh load sys config merge file /config/verifyHash\nif [ $? != 0 ]; then\necho cannot validate signature of /config/verifyHash\nexit\nfi\necho loaded verifyHash\nscript_loc=\"/var/lib/waagent/custom-script/download/0/\"\nconfig_loc=\"/config/cloud/\"\nhashed_file_list=\"${config_loc}f5-cloud-libs.tar.gz\"\nfor file in $hashed_file_list; do\necho \"verifying $file\"\n/usr/bin/tmsh run cli script verifyHash $file\nif [ $? != 0 ]; then\necho \"$file is not valid\"\nexit 1\nfi\necho \"verified $file\"\ndone\necho \"expanding $hashed_file_list\"\ntar xvfz /config/cloud/f5-cloud-libs.tar.gz -C /config/cloud/node_modules\ntouch /config/cloud/cloudLibsReady', variables('singleQuote'))]", 
          "dnsLabel": "[toLower(parameters('dnsLabel'))]", 
          "bigIpNicPortValue": "[variables('bigIpNicPortMap')['1'].Port]", 
          "bigIpMgmtPort": "8443", 
          "availabilitySetName": "[concat(variables('dnsLabel'), '-avset')]", 
          "nicName": "[concat(variables('dnsLabel'), '-nic')]", 
          "virtualNetworkName": "[concat(variables('dnsLabel'), '-vnet')]", 
          "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]", 
          "vnetAddressPrefix": "10.0.0.0/16", 
          "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups/',concat(variables('dnsLabel'),'-nsg'))]", 
          "publicIPAddressName": "[concat(variables('dnsLabel'), '-pip')]", 
          "publicIPAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]", 
          "publicIPAddressType": "Static", 
          "subnetName": "[concat(variables('dnsLabel'),'-subnet')]", 
          "subnetId": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]", 
          "subnetPrefix": "10.0.1.0/24", 
          "subnetPrivateAddress": "10.0.1.4", 
          "instanceName": "[toLower(parameters('instanceName'))]",
          "instanceTypeMap": {
               "Standard_A3": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_A4": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_A5": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_A6": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_A7": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D3": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D4": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D11": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D12": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D13": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D14": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D2_v2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D3_v2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D4_v2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D5_v2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D11_v2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D12_v2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D13_v2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D14_v2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_F2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_F4": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_G1": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_G2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_G3": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_G4": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_G5": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_DS1": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS3": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS4": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS11": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS12": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS13": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS14": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS1_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS2_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS3_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS4_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS5_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS11_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS12_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS13_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS14_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS15_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_GS1": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_GS2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_GS3": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_GS4": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_GS5": {
                    "storageAccountType": "Premium_LRS"
               }
          }
     }, 
     "resources": [
          {
               "apiVersion": "[variables('networkApiVersion')]", 
               "location": "[variables('location')]", 
               "name": "[variables('publicIPAddressName')]", 
               "properties": {
                    "dnsSettings": {
                         "domainNameLabel": "[variables('dnsLabel')]"
                    }, 
                    "idleTimeoutInMinutes": 30, 
                    "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
               }, 
               "tags": {
                    "application": "[parameters('tagValues').application]", 
                    "costCenter": "[parameters('tagValues').cost]", 
                    "environment": "[parameters('tagValues').environment]", 
                    "group": "[parameters('tagValues').group]", 
                    "owner": "[parameters('tagValues').owner]"
               }, 
               "type": "Microsoft.Network/publicIPAddresses"
          }, 
          {
               "apiVersion": "[variables('apiVersion')]", 
               "location": "[variables('location')]", 
               "name": "[variables('virtualNetworkName')]", 
               "properties": {
                    "addressSpace": {
                         "addressPrefixes": [
                              "[variables('vnetAddressPrefix')]"
                         ]
                    }, 
                    "subnets": [
                         {
                              "name": "[variables('subnetName')]", 
                              "properties": {
                                   "addressPrefix": "[variables('subnetPrefix')]"
                              }
                         }
                    ]
               }, 
               "tags": {
                    "application": "[parameters('tagValues').application]", 
                    "costCenter": "[parameters('tagValues').cost]", 
                    "environment": "[parameters('tagValues').environment]", 
                    "group": "[parameters('tagValues').group]", 
                    "owner": "[parameters('tagValues').owner]"
               }, 
               "type": "Microsoft.Network/virtualNetworks"
          }, 
          {
               "apiVersion": "[variables('apiVersion')]", 
               "dependsOn": [
                    "[variables('vnetId')]", 
                    "[variables('publicIPAddressId')]", 
                    "[variables('nsgID')]"
               ], 
               "location": "[variables('location')]", 
               "name": "[variables('nicName')]", 
               "properties": {
                    "ipConfigurations": [
                         {
                              "name": "[concat(variables('instanceName'), '-ipconfig1')]", 
                              "properties": {
                                   "PublicIpAddress": {
                                        "Id": "[variables('publicIPAddressId')]"
                                   }, 
                                   "privateIPAddress": "[variables('subnetPrivateAddress')]", 
                                   "privateIPAllocationMethod": "Static", 
                                   "subnet": {
                                        "id": "[variables('subnetId')]"
                                   }
                              }
                         }
                    ], 
                    "networkSecurityGroup": {
                         "id": "[variables('nsgID')]"
                    }
               }, 
               "tags": {
                    "application": "[parameters('tagValues').application]", 
                    "costCenter": "[parameters('tagValues').cost]", 
                    "environment": "[parameters('tagValues').environment]", 
                    "group": "[parameters('tagValues').group]", 
                    "owner": "[parameters('tagValues').owner]"
               }, 
               "type": "Microsoft.Network/networkInterfaces"
          }, 
          {
               "apiVersion": "[variables('apiVersion')]", 
               "location": "[variables('location')]", 
               "name": "[concat(variables('dnsLabel'), '-nsg')]", 
               "properties": {
                    "securityRules": [
                         {
                              "name": "mgmt_allow_https", 
                              "properties": {
                                   "access": "Allow", 
                                   "description": "", 
                                   "destinationAddressPrefix": "*", 
                                   "destinationPortRange": "[variables('bigIpMgmtPort')]", 
                                   "direction": "Inbound", 
                                   "priority": 101, 
                                   "protocol": "TCP", 
                                   "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]", 
                                   "sourcePortRange": "*"
                              }
                         }, 
                         {
                              "name": "ssh_allow_22", 
                              "properties": {
                                   "access": "Allow", 
                                   "description": "", 
                                   "destinationAddressPrefix": "*", 
                                   "destinationPortRange": "22", 
                                   "direction": "Inbound", 
                                   "priority": 102, 
                                   "protocol": "TCP", 
                                   "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]", 
                                   "sourcePortRange": "*"
                              }
                         }
                    ]
               }, 
               "tags": {
                    "application": "[parameters('tagValues').application]", 
                    "costCenter": "[parameters('tagValues').cost]", 
                    "environment": "[parameters('tagValues').environment]", 
                    "group": "[parameters('tagValues').group]", 
                    "owner": "[parameters('tagValues').owner]"
               }, 
               "type": "Microsoft.Network/networkSecurityGroups"
          }, 
          {
               "apiVersion": "[variables('apiVersion')]", 
               "location": "[variables('location')]", 
               "name": "[variables('availabilitySetName')]", 
               "tags": {
                    "application": "[parameters('tagValues').application]", 
                    "costCenter": "[parameters('tagValues').cost]", 
                    "environment": "[parameters('tagValues').environment]", 
                    "group": "[parameters('tagValues').group]", 
                    "owner": "[parameters('tagValues').owner]"
               }, 
               "type": "Microsoft.Compute/availabilitySets"
          }, 
          {
               "apiVersion": "[variables('apiVersion')]", 
               "dependsOn": [
                    "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]", 
                    "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
               ], 
               "location": "[variables('location')]", 
               "name": "[variables('instanceName')]", 
               "properties": {
                    "availabilitySet": {
                         "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
                    }, 
                    "diagnosticsProfile": {
                         "bootDiagnostics": {
                              "enabled": false
                         }
                    }, 
                    "hardwareProfile": {
                         "vmSize": "[parameters('instanceType')]"
                    }, 
                    "networkProfile": {
                         "networkInterfaces": [
                              {
                                   "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]", 
                                   "properties": {
                                        "primary": true
                                   }
                              }
                         ]
                    }, 
                    "osProfile": {
                         "adminPassword": "[parameters('adminPassword')]", 
                         "adminUsername": "[parameters('adminUsername')]", 
                         "computerName": "[variables('instanceName')]"
                    }, 
                    "storageProfile": {
                         "osDisk": {
                              "osType": "Linux",
                              "image": {
                                   "uri": "[concat('https://',parameters('userImageStorageAccountName'),'.blob.core.windows.net/',parameters('containerName'),'/', parameters('vhdName'), '.vhd')]"
                              },
                              "name": "[concat(parameters('dnsLabel'),'-osdisk')]",
                              "vhd": {
                                   "uri": "[concat('https://',parameters('userImageStorageAccountName'),'.blob.core.windows.net/',parameters('containerName'),'/',parameters('dnsLabel'),'-osDisk.vhd')]"
                              },
                              "caching": "ReadWrite",
                              "createOption": "FromImage"
                         }
                    }
               }, 
               "tags": {
                    "application": "[parameters('tagValues').application]", 
                    "costCenter": "[parameters('tagValues').cost]", 
                    "environment": "[parameters('tagValues').environment]", 
                    "group": "[parameters('tagValues').group]", 
                    "owner": "[parameters('tagValues').owner]"
               }, 
               "type": "Microsoft.Compute/virtualMachines"
          }
     ], 
     "outputs": {
          "GUI-URL": {
               "type": "string", 
               "value": "[concat('https://', variables('dnsLabel'), '.', resourceGroup().location, '.cloudapp.azure.com', ':', variables('bigIpMgmtPort'))]"
          }, 
          "SSH-URL": {
               "type": "string", 
               "value": "[concat(variables('dnsLabel'), '.', resourceGroup().location, '.cloudapp.azure.com', ' ',22)]"
          }
     }
}
