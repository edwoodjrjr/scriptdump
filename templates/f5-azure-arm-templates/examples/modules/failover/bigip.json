{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string"
    },
    "sshKey": {
      "type": "string"
    },
    "instanceName": {
      "type": "string"
    },
    "dnsLabel": {
      "type": "string"
    },
    "newDataStorageAccountName": {
        "type": "string"
    },
    "location": {
      "type": "string"
    },
    "licenseKey1": {
      "type": "string"
    },
    "licenseKey2": {
      "type": "string"
    },
    "useCustomImage": {
        "type": "bool"
    },
    "imagePlan": {
        "type": "object"
    },
    "storageProfileArray": {
        "type": "object"
    },
    "selfNicConfigArray": {
      "type": "object"
    },
    "addtlNicConfigArray": {
      "type": "object"
    },
    "numberOfAdditionalNics": {
      "type": "int"
    },
    "instanceType": {
        "type": "string"
    },
    "tagValues": {
        "type": "object"
    },
    "availabilitySetId": {
      "type": "string"
    },
    "zonesAvailable": {
        "type": "bool"
    }
  },
  "variables": {
    "computeApiVersion": "2017-12-01"
  },
  "resources": [
    {
      "apiVersion": "2017-12-01",
      "location": "[parameters('location')]",
      "copy": {
        "name": "bigipCopy",
        "count": 2
      },
      "name": "[concat(parameters('dnsLabel'), '-', parameters('instanceName'), copyIndex())]",
      "plan": "[if(parameters('useCustomImage'), json('null'), parameters('imagePlan'))]",
      "properties": {
          "availabilitySet": "[if(not(parameters('zonesAvailable')), parameters('availabilitySetId'), json('null'))]",
          "diagnosticsProfile": {
              "bootDiagnostics": {
                  "enabled": true,
                  "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', parameters('newDataStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
              }
          },
          "hardwareProfile": {
              "vmSize": "[parameters('instanceType')]"
          },
          "networkProfile": {
              "networkInterfaces": "[concat(take(parameters('selfNicConfigArray')[copyIndex()], 3), take(parameters('addtlNicConfigArray')[concat('values', copyIndex())], parameters('numberOfAdditionalNics')))]"
          },
          "osProfile": {
            "adminUsername": "[parameters('adminUsername')]",
            "computerNamePrefix": "[parameters('instanceName')]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                  "publicKeys": [
                      {
                          "keyData": "[parameters('sshKey')]",
                          "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]"
                      }
                  ]
              }
            },
            "customData": "[base64(concat('runtime_parameters: []\nextension_packages:\n  install_operations:\n    - extensionType: do\n      extensionVersion: 1.5.0\n    - extensionType: as3\n      extensionVersion: 3.13.0\nextension_services:\n  service_operations: []'))]"
          },
          "storageProfile": "[if(parameters('useCustomImage'), parameters('storageProfileArray').customImage, parameters('storageProfileArray').platformImage)",
          "extensionProfile": {
            "extensions": [
                {
                    "name": "onboarder",
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "commandToExecute": "mkdir -p /config/cloud; cp /var/lib/waagent/CustomData /config/cloud/onboard_config.yaml; curl https://raw.githubusercontent.com/edwoodjrjr/scriptdump/master/solution-scripts/install.sh | bash; f5-cloud-onboarder -c /config/cloud/onboard_config.yaml"
                        }
                    }
                }
            ]
        }
      },
      "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
      "zones": "[if(parameters('zonesAvailable'), array(copyIndex(1)), json('null'))]",
      "type": "Microsoft.Compute/virtualMachines"
  }
  ],
  "outputs": {
  }
}