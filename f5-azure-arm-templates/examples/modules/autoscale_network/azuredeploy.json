{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
    "location": {
      "type": "string"
    },
    "mgmtPublicIPAddressName": {
      "type": "string"
    },
    "dnsLabel": {
      "type": "string"
    },
    "publicIPAddressType": {
      "type": "string"
    },
    "mgmtNsgName": {
      "type": "string"
    },
    "useExistingNsg": {
      "type": "bool"
    },
    "bigIpMgmtPort": {
      "type": "int"
    },
    "restrictedSrcAddress": {
      "type": "string"
    },
    "provisionPublicIP": {
      "type": "string"
    },
    "useExistingLoadBalancer": {
      "type": "bool"
    },
    "externalLoadBalancerName": {
      "type": "string"
    },
    "mgmtPublicIPAddressId": {
      "type": "string"
    },
    "frontEndIPConfigID": {
      "type": "string"
    },
    "lbTcpProbeIdHttp": {
      "type": "string"
    },
    "lbTcpProbeIdHttps": {
      "type": "string"
    },
    "lbTcpProbeNameHttp": {
      "type": "string"
    },
    "lbTcpProbeNameHttps": {
      "type": "string"
    },
    "tagValues": {
      "type": "object"
    }
  },
	"variables": {
    "networkApiVersion": "2017-11-01"
  },
	"resources": [
    {
			"apiVersion": "[variables('networkApiVersion')]",
			"sku": {
				"name": "Standard"
			},
			"location": "[parameters('location')]",
			"name": "[parameters('mgmtPublicIPAddressName')]",
			"properties": {
				"dnsSettings": {
					"domainNameLabel": "[parameters('dnsLabel')]"
				},
				"idleTimeoutInMinutes": 30,
				"publicIPAllocationMethod": "[parameters('publicIPAddressType')]"
			},
			"tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
			"type": "Microsoft.Network/publicIPAddresses"
		},
		{
			"apiVersion": "[variables('networkApiVersion')]",
			"location": "[parameters('location')]",
			"name": "[parameters('mgmtNsgName')]",
			"condition": "[not(parameters('useExistingNsg'))]",
			"properties": {
				"securityRules": [{
						"name": "mgmt_allow_https",
						"properties": {
							"access": "Allow",
							"description": "",
							"destinationAddressPrefix": "*",
							"destinationPortRange": "[parameters('bigIpMgmtPort')]",
							"direction": "Inbound",
							"priority": 101,
							"protocol": "Tcp",
							"sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
							"sourcePortRange": "*"
						}
					},
					{
						"name": "ssh_allow_22",
						"properties": {
							"access": "Allow",
							"description": "",
							"destinationAddressPrefix": "*",
							"destinationPortRange": "22",
							"direction": "Inbound",
							"priority": 102,
							"protocol": "Tcp",
							"sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
							"sourcePortRange": "*"
						}
					},
					{
						"name": "app_allow_http",
						"properties": {
							"access": "Allow",
							"description": "",
							"destinationAddressPrefix": "*",
							"destinationPortRange": "80",
							"direction": "Inbound",
							"priority": 110,
							"protocol": "Tcp",
							"sourceAddressPrefix": "*",
							"sourcePortRange": "*"
						}
					},
					{
						"name": "app_allow_https",
						"properties": {
							"access": "Allow",
							"description": "",
							"destinationAddressPrefix": "*",
							"destinationPortRange": "443",
							"direction": "Inbound",
							"priority": 111,
							"protocol": "Tcp",
							"sourceAddressPrefix": "*",
							"sourcePortRange": "*"
						}
					},
					{
						"name": "allow_loadBalancer_traffic",
						"properties": {
							"access": "Allow",
							"description": "",
							"destinationAddressPrefix": "AzureLoadBalancer",
							"destinationPortRange": "*",
							"direction": "Outbound",
							"priority": 110,
							"protocol": "Tcp",
							"sourceAddressPrefix": "*",
							"sourcePortRange": "*"
						}
					},
					{
						"name": "disallow_inbound_traffic",
						"properties": {
							"access": "[if(equals(parameters('provisionPublicIP'), 'No'), 'Deny', 'Allow')]",
							"description": "",
							"destinationAddressPrefix": "*",
							"destinationPortRange": "*",
							"direction": "Inbound",
							"priority": 113,
							"protocol": "Tcp",
							"sourceAddressPrefix": "Internet",
							"sourcePortRange": "*"
						}
					}
				]
			},
			"tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
			"type": "Microsoft.Network/networkSecurityGroups"
		},
		{
			"apiVersion": "[variables('networkApiVersion')]",
			"condition": "[not(parameters('useExistingLoadBalancer'))]",
			"dependsOn": [
				"[concat('Microsoft.Network/publicIPAddresses/', parameters('mgmtPublicIPAddressName'))]"
			],
			"location": "[parameters('location')]",
			"name": "[parameters('externalLoadBalancerName')]",
			"properties": {
				"backendAddressPools": [{
					"name": "loadBalancerBackEnd"
				}],
				"frontendIPConfigurations": [{
					"name": "loadBalancerFrontEnd",
					"properties": {
						"publicIPAddress": {
							"id": "[parameters('mgmtPublicIPAddressId')]"
						}
					}
				}],
				"inboundNatPools": [{
						"name": "sshnatpool",
						"properties": {
							"backendPort": 22,
							"frontendIPConfiguration": {
								"id": "[parameters('frontEndIPConfigID')]"
							},
							"frontendPortRangeEnd": 50100,
							"frontendPortRangeStart": 50001,
							"protocol": "Tcp"
						}
					},
					{
						"name": "mgmtnatpool",
						"properties": {
							"backendPort": "[parameters('bigIpMgmtPort')]",
							"frontendIPConfiguration": {
								"id": "[parameters('frontEndIPConfigID')]"
							},
							"frontendPortRangeEnd": 50200,
							"frontendPortRangeStart": 50101,
							"protocol": "Tcp"
						}
					}
				],
				"loadBalancingRules": [{
						"Name": "app-http",
						"properties": {
							"backendAddressPool": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('externalLoadBalancerName')), '/backendAddressPools/loadBalancerBackEnd')]"
							},
							"backendPort": 80,
							"frontendIPConfiguration": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('externalLoadBalancerName')), '/frontendIpConfigurations/loadBalancerFrontEnd')]"
							},
							"frontendPort": 80,
							"idleTimeoutInMinutes": 15,
							"probe": {
								"id": "[parameters('lbTcpProbeIdHttp')]"
							},
							"protocol": "Tcp"
						}
					},
					{
						"Name": "app-https",
						"properties": {
							"backendAddressPool": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('externalLoadBalancerName')), '/backendAddressPools/loadBalancerBackEnd')]"
							},
							"backendPort": 443,
							"frontendIPConfiguration": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('externalLoadBalancerName')), '/frontendIpConfigurations/loadBalancerFrontEnd')]"
							},
							"frontendPort": 443,
							"idleTimeoutInMinutes": 15,
							"probe": {
								"id": "[parameters('lbTcpProbeIdHttps')]"
							},
							"protocol": "Tcp"
						}
					}
				],
				"probes": [{
						"name": "[parameters('lbTcpProbeNameHttp')]",
						"properties": {
							"intervalInSeconds": 15,
							"numberOfProbes": 3,
							"port": 80,
							"protocol": "Tcp"
						}
					},
					{
						"name": "[parameters('lbTcpProbeNameHttps')]",
						"properties": {
							"intervalInSeconds": 15,
							"numberOfProbes": 3,
							"port": 443,
							"protocol": "Tcp"
						}
					}
				]
			},
			"tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
			"sku": {
				"name": "Standard"
			},
			"type": "Microsoft.Network/loadBalancers"
		}
	],
	"outputs": {}
}