{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template deploys common EC2/VPC resources which will be used by the other templates.  In particular, this template creates a VPC, subnets, a routing table, common security groups, load balancers, etc.",
  "Parameters": {
    "deploymentName" : {
      "Description" : "Deployment Name - used for creating objects. ex. example",
      "Type" : "String",
      "MaxLength": 20,
      "Default": "example"
    },
    "application" : {
      "Description" : "Service Name - used for creating objects. ex. service1",
      "Type" : "String",
      "MaxLength": 20,
      "Default": "f5demo"
    },
    "poolPort" : {
      "Description" : "Port used for Service Pool",
      "Type" : "String",
      "Default": "80"
    },
    "vpc": {
      "Description": "VPC where you want to deploy the BIG-IP VEs",
      "Type": "AWS::EC2::VPC::Id"
    }, 
    "subnets": {
      "Description": "Public or external subnet for the availability zones",
      "Type": "List<AWS::EC2::Subnet::Id>"
    }
  },
  "Resources": {
    "externalLBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "GroupDescription": "Enable SSH access via port 22 and enable access to virtual servers on 80 and 443",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "deploymentName"
                    },
                    "-",
                    {
                      "Ref": "application"
                    },
                    " external lb security group"
                  ]
                ]
              }
            },
            {
              "Key": "Application",
              "Value": {
                "Ref": "application"
              }
            }
        ]
      }
    },
    "bigipExternalLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Type": "network",
        "Name":  {
          "Fn::Join": [
            "",
            [ 
              { "Ref" : "deploymentName" },
              "-",
              { "Ref" : "application" },
              "-BigipExtLb"
            ]
          ]
        },
        "Scheme": "internet-facing",
        "Subnets" : { "Ref": "subnets" },
        "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "deploymentName"
                    },
                    "-",
                    {
                      "Ref": "application"
                    },
                    " external lb"
                  ]
                ]
              }
            },
            {
              "Key": "Application",
              "Value": {
                "Ref": "application"
              }
            }
        ]
      }
    },
    "NLBListener": {
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [{
          "Type": "forward",
          "TargetGroupArn": {
            "Ref": "TargetGroup"
          }
        }],
        "LoadBalancerArn": {
          "Ref": "bigipExternalLoadBalancer"
        },
        "Port": "443",
        "Protocol": "TCP"
      }
    },
    "TargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Name": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "deploymentName"
                    },
                    "-",
                    {
                      "Ref": "application"
                    },
                    "-BIGIPs"
                  ]
                ]
        },
        "Port": 443,
        "Protocol": "TCP",
        "HealthCheckIntervalSeconds": "10",
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTPS",
        "HealthyThresholdCount": "2",
        "UnhealthyThresholdCount": "2",  
        "TargetGroupAttributes": [{
          "Key": "deregistration_delay.timeout_seconds",
          "Value": "20"
        }],
        "VpcId":  {
          "Ref": "vpc"
        }
      }
    }
  },
  "Outputs": {
    "externalLBSecurityGroup": {
      "Description": "Security Group for external LB of BIG-IP",
      "Value": {
        "Ref": "externalLBSecurityGroup"
      }
    },
    "bigipExternalLoadBalancer": {
      "Description": "Id of ELB Group for all BIG-IPs",
      "Value": {
        "Ref": "bigipExternalLoadBalancer"
      }
    },
    "bigipExternalLoadBalancerUrl": {
      "Description": "DNS Name for the ELB Group containing BIG-IP",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            { 
              "Fn::GetAtt": [
                "bigipExternalLoadBalancer",
                "DNSName"
              ]
            }
          ]
        ]
      }
    },
    "targetGroupArn": {
        "Description": "Target Group Arn Name for the ELB Group containing BIG-IP",
        "Value": {
            "Ref": "TargetGroup"
        }
    }
  }
}
