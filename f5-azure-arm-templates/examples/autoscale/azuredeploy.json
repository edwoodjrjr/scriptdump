{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "7.2.0.0",
    "parameters": {
        "templateBaseUrl": {
            "allowedValues": [
                "https://raw.githubusercontent.com/edwoodjrjr/scriptdump/master/",
                "https://cdn.f5.com/product/cloudsolutions/"
            ],
            "defaultValue": "https://raw.githubusercontent.com/edwoodjrjr/scriptdump/master/",
            "metadata": {
                "description": "URL where templates are stored."
            },
            "type": "string"
        },
        "artifactLocation": {
            "defaultValue": "f5-azure-arm-templates/examples/",
            "metadata": {
                "description": "Location where modules folder is stored."
            },
            "type": "string"
        },
        "customDoDeclarationUrl": {
            "defaultValue": "OPTIONAL",
            "metadata": {
                "description": "If you would like to use a custom DO declaraton for configuring BIG-IP, specify the URL here.  **Note**: To use the default recommended declaration, leave the default of **OPTIONAL**."
            },
            "type": "string"
        }, 
        "customAs3DeclarationUrl": {
            "defaultValue": "OPTIONAL",
            "metadata": {
                "description": "If you would like to use a custom AS3 declaraton for configuring BIG-IP, specify the URL here.  **Note**: To use the default recommended declaration, leave the default of **OPTIONAL**."
            },
            "type": "string"
        },
        "adminUsername": {
            "defaultValue": "azureuser",
            "metadata": {
                "description": "User name for the Virtual Machine."
            },
            "type": "string"
        },
        "sshKey": {
            "metadata": {
                "description": "Password or SSH public key to login to the Virtual Machine. Note: There are a number of special characters that you should avoid using for F5 product user accounts.  See [K2873](https://support.f5.com/csp/article/K2873) for details. Note: If using key-based authentication, this should be the public key as a string, typically starting with **---- BEGIN SSH2 PUBLIC KEY ----** and ending with **---- END SSH2 PUBLIC KEY ----**."
            },
            "type": "securestring"
        },
        "dnsLabel": {
            "metadata": {
                "description": "Unique DNS Name for the Public IP address used to access the Virtual Machine."
            },
            "type": "string"
        },
        "instanceType": {
            "allowedValues": [
                "Standard_A3",
                "Standard_A4",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",
                "Standard_D2",
                "Standard_D3",
                "Standard_D4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14",
                "Standard_DS2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14",
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_D15_v2",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2",
                "Standard_F4",
                "Standard_F8",
                "Standard_F2S",
                "Standard_F4S",
                "Standard_F8S",
                "Standard_F16S",
                "Standard_G2",
                "Standard_G3",
                "Standard_G4",
                "Standard_G5",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS5"
            ],
            "defaultValue": "Standard_DS4_v2",
            "metadata": {
                "description": "Instance size of the Virtual Machine."
            },
            "type": "string"
        },
        "imageName": {
            "allowedValues": [
                "Best25Mbps",
                "Best200Mbps",
                "Best1Gbps",
                "Best10Gbps",
                "AdvancedWaf25Mbps",
                "AdvancedWaf200Mbps",
                "AdvancedWaf1Gbps",
                "PerAppVeAdvancedWaf25Mbps",
                "PerAppVeAdvancedWaf200Mbps"
            ],
            "defaultValue": "Best1Gbps",
            "metadata": {
                "description": "F5 SKU (image) you want to deploy. Note: The disk size of the VM will be determined based on the option you select.  **Important**: 10Gbps SKUs are supported only with BIGIP VE v15 or later. If intending to provision multiple modules, ensure the appropriate value is selected, such as **Best** instead of **Good**."
            },
            "type": "string"
        },
        "customImage": {
            "defaultValue": "OPTIONAL",
            "metadata": {
                "description": "If you would like to deploy using a local BIG-IP image, provide either the full URL to the VHD in Azure storage **or** the full resource ID to an existing Microsoft.Compute image resource.  **Note**: Unless specifically required, leave the default of **OPTIONAL**."
            },
            "type": "string"
        },
        "bigIpVersion": {
            "allowedValues": [
                "15.0.100000",
                "14.1.200000",
                "latest"
            ],
            "defaultValue": "15.0.100000",
            "metadata": {
                "description": "F5 BIG-IP version you want to use."
            },
            "type": "string"
        },
        "provisionPublicIP": {
            "allowedValues": [
                "No",
                "Yes"
            ],
            "defaultValue": "Yes",
            "metadata": {
                "description": "Enabling management public IP(s) allows for direct public access to each BIG-IP VE that is created."
            },
            "type": "string"
        },
        "vnetAddressPrefix": {
            "defaultValue": "10.0",
            "metadata": {
                "description": "The start of the CIDR block the BIG-IP VEs use when creating the Vnet and subnets.  You MUST type just the first two octets of the /16 virtual network that will be created, for example '10.0', '10.100', 192.168'."
            },
            "type": "string"
        },
        "mgmtNsgName": {
            "defaultValue": "OPTIONAL",
            "metadata": {
                "description": "If you would like to deploy using an existing Azure Network Security Group, provide the NSG name here.  **Note**: Unless specifically required, leave the default of **OPTIONAL**."
            },
            "type": "string"
        },     
        "restrictedSrcAddress": {
            "defaultValue": "*",
            "metadata": {
                "description": "This field restricts management access to a specific network or address. Enter an IP address or address range in CIDR notation, or asterisk for all sources"
            },
            "type": "string"
        },
        "vmScaleSetMinCount": {
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6
            ],
            "defaultValue": 2,
            "metadata": {
                "description": "The minimum (and default) number of BIG-IP VEs that will be deployed into the VM Scale Set."
            },
            "type": "int"
        },
        "vmScaleSetMaxCount": {
            "allowedValues": [
                2,
                3,
                4,
                5,
                6,
                7,
                8
            ],
            "defaultValue": 4,
            "metadata": {
                "description": "The maximum number of BIG-IP VEs that can be deployed into the VM Scale Set."
            },
            "type": "int"
        },
        "appInsights": {
            "defaultValue": "CREATE_NEW",
            "metadata": {
                "description": "Enter the name of your existing Application Insights environment that will be used to receive custom BIG-IP metrics you can use for Scale Set rules and device visibility. If the Application Insights environment is in a different Resource Group than this deployment, specify it as **app_insights_name;app_insights_rg**).  If you do not have an Application Insights environment, leave the default (CREATE_NEW) and the template will create one. Note: By default, the new Application Insights environment will be created in **East US**, if necessary you can specify a different region as **CREATE_NEW:app_insights_region**)."
            },
            "type": "string"
        },
        "scaleOutCpuThreshold": {
            "defaultValue": 80,
            "maxValue": 100,
            "metadata": {
                "description": "The percentage of CPU utilization that should trigger a scale out event."
            },
            "minValue": 1,
            "type": "int"
        },
        "scaleInCpuThreshold": {
            "defaultValue": 20,
            "maxValue": 100,
            "metadata": {
                "description": "The percentage of CPU utilization that should trigger a scale in event."
            },
            "minValue": 1,
            "type": "int"
        },
        "scaleOutThroughputThreshold": {
            "defaultValue": 20000000,
            "metadata": {
                "description": "The amount of throughput (**bytes**) that should trigger a scale out event. Note: The default value is equal to 20 MB"
            },
            "type": "int"
        },
        "scaleInThroughputThreshold": {
            "defaultValue": 10000000,
            "metadata": {
                "description": "The amount of throughput (**bytes**) that should trigger a scale in event. Note: The default value is equal to 10 MB"
            },
            "type": "int"
        },
        "scaleOutTimeWindow": {
            "defaultValue": 10,
            "maxValue": 60,
            "metadata": {
                "description": "The time window required to trigger a scale out event. This is used to determine the amount of time needed for a threshold to be breached, as well as to prevent excessive scaling events (flapping). **Note:** Allowed values are 1-60 (minutes)."
            },
            "minValue": 1,
            "type": "int"
        },
        "scaleInTimeWindow": {
            "defaultValue": 10,
            "maxValue": 60,
            "metadata": {
                "description": "The time window required to trigger a scale in event. This is used to determine the amount of time needed for a threshold to be breached, as well as to prevent excessive scaling events (flapping). **Note:** Allowed values are 1-60 (minutes)."
            },
            "minValue": 1,
            "type": "int"
        },
        "notificationEmail": {
            "defaultValue": "OPTIONAL",
            "metadata": {
                "description": "If you want email notifications on scale events, specify an email address, otherwise leave the parameter as **OPTIONAL**. Note: You can specify multiple emails by separating them with a semi-colon, such as *email@domain.com;email2@domain.com*."
            },
            "type": "string"
        },
        "externalLoadBalancerName": {
            "defaultValue": "OPTIONAL",
            "metadata": {
                "description": "If you would like to deploy using an existing Azure Load Balancer (Standard SKU) with a backend pool called loadBalancerBackEnd, provide the ALB name here.  **Note**: Unless specifically required, leave the default of **OPTIONAL**."
            },
            "type": "string"
        },
        "internalLoadBalancerName": {
            "defaultValue": "OPTIONAL",
            "metadata": {
                "description": "If you would like to add instances to an existing internal Azure Load Balancer (Standard SKU) with a backend pool called loadBalancerBackEnd, provide the internal ALB name here.  **Note**: Unless specifically required, leave the default of **OPTIONAL**."
            },
            "type": "string"
        },
        "useAvailabilityZones": {
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes",
            "metadata": {
                "description": "This deployment can deploy resources into Azure Availability Zones (if the region supports it).  If that is not desired the input should be set 'No'."
            },
            "type": "string"
        },
        "provisionApp": {
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No",
            "metadata": {
                "description": "Choose yes to deploy app server resources."
            },
            "type": "string"
        },
        "serviceDiscoveryApiKey": {
            "defaultValue": "OPTIONAL",
            "metadata": {
                "description": "If you would like to automatically discover service nodes, specify the Azure service principal access key with appropriate permissions here."
            },
            "type": "securestring"
        },
        "tagValues": {
            "defaultValue": {
                "application": "APP",
                "cost": "COST",
                "environment": "ENV",
                "group": "GROUP",
                "owner": "OWNER"
            },
            "metadata": {
                "description": "Default key/value resource tags will be added to the resources in this deployment, if you would like the values to be unique adjust them as needed for each key."
            },
            "type": "object"
        }
    },
    "variables": {
        "deploymentApiVersion": "2017-05-10",
        "networkApiVersion": "2017-11-01",
        "location": "[resourceGroup().location]",      
        "subscriptionID": "[subscription().subscriptionId]",
        "resourceGroupName": "[resourceGroup().name]",
        "deploymentId": "[concat(variables('subscriptionId'), resourceGroup().id, deployment().name, variables('dnsLabel'))]",
        "dnsLabel": "[toLower(parameters('dnsLabel'))]",
        "sshKey": "[replace(parameters('sshKey'),'\\n', '\n')]",
        "dODeclarationUrl": "[replace(parameters('customDoDeclarationUrl'), 'OPTIONAL', concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/autoscale_bigip/do.json'))]",
        "as3DeclarationUrl": "[replace(parameters('customAs3DeclarationUrl'), 'OPTIONAL', concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/autoscale_bigip/as3.json'))]",  
        "customImage": "[replace(parameters('customImage'), 'OPTIONAL', '')]",
        "useCustomImage": "[not(empty(variables('customImage')))]",
        "createNewCustomImage": "[contains(variables('customImage'), 'https://')]",
        "newCustomImageName": "[concat(variables('dnsLabel'), 'image')]",
        "storageProfileArray": {
            "customImage": {
                "imageReference": {
                    "id": "[if(variables('createNewCustomImage'), resourceId('Microsoft.Compute/images', variables('newCustomImageName')), variables('customImage'))]"
                }
            },
            "platformImage": {
                "imageReference": "[variables('imageReference')]",
                "osDisk": {
                    "createOption": "FromImage"
                }
            }
        },
        "premiumInstanceArray": [
            "Standard_DS2",
            "Standard_DS3",
            "Standard_DS4",
            "Standard_DS11",
            "Standard_DS12",
            "Standard_DS13",
            "Standard_DS14",
            "Standard_DS2_v2",
            "Standard_DS3_v2",
            "Standard_DS4_v2",
            "Standard_DS5_v2",
            "Standard_DS11_v2",
            "Standard_DS12_v2",
            "Standard_DS13_v2",
            "Standard_DS14_v2",
            "Standard_DS15_v2",
            "Standard_F2S",
            "Standard_F4S",
            "Standard_F8S",
            "Standard_F16S",
            "Standard_GS2",
            "Standard_GS3",
            "Standard_GS4",
            "Standard_GS5"
        ],   
        "imageNameToLower": "[toLower(parameters('imageName'))]",
        "skuToUse": "[variables('paygImageMap')[variables('imageNameToLower')]['sku']]",
        "offerToUse": "[variables('paygImageMap')[variables('imageNameToLower')]['offer']]",
        "imagePlan": {
            "name": "[variables('skuToUse')]",
            "product": "[variables('offerToUse')]",
            "publisher": "f5-networks"
        },
        "imageReference": {
            "offer": "[variables('offerToUse')]",
            "publisher": "f5-networks",
            "sku": "[variables('skuToUse')]",
            "version": "[parameters('bigIpVersion')]"
        },    
        "zoneMappings": "[replace(toLower(string(providers('Microsoft.Compute', 'virtualMachines').zoneMappings)), ' ', '')]",
        "southcentralus": "[equals(variables('location'), string('southcentralus'))]",
        "southafricanorth": "[equals(variables('location'), string('southafricanorth'))]",
        "australiaeast": "[equals(variables('location'), string('australiaeast'))]",
        "zonesAvailable": "[and(contains(variables('zoneMappings'), concat('\"', variables('location'), '\"')), not(variables('southcentralus')), not(variables('southafricanorth')), not(variables('australiaeast')))]",
        "paygImageMap": {
            "advancedwaf1gbps": {
                "offer": "f5-big-ip-advanced-waf",
                "sku": "f5-bigip-virtual-edition-1g-waf-hourly"
            },
            "advancedwaf200mbps": {
                "offer": "f5-big-ip-advanced-waf",
                "sku": "f5-bigip-virtual-edition-200m-waf-hourly"
            },
            "advancedwaf25mbps": {
                "offer": "f5-big-ip-advanced-waf",
                "sku": "f5-bigip-virtual-edition-25m-waf-hourly"
            },
            "best1gbps": {
                "offer": "f5-big-ip-best",
                "sku": "f5-bigip-virtual-edition-1g-best-hourly"
            },
            "best10gbps": {
                "offer": "f5-big-ip-best",
                "sku": "f5-bigip-virtual-edition-10g-best-hourly"
            },
            "best200mbps": {
                "offer": "f5-big-ip-best",
                "sku": "f5-bigip-virtual-edition-200m-best-hourly"
            },
            "best25mbps": {
                "offer": "f5-big-ip-best",
                "sku": "f5-bigip-virtual-edition-25m-best-hourly"
            },
            "better1gbps": {
                "offer": "f5-big-ip-better",
                "sku": "f5-bigip-virtual-edition-1g-better-hourly"
            },
            "better10gbps": {
                "offer": "f5-big-ip-better",
                "sku": "f5-bigip-virtual-edition-10g-better-hourly"
            },
            "better200mbps": {
                "offer": "f5-big-ip-better",
                "sku": "f5-bigip-virtual-edition-200m-better-hourly"
            },
            "better25mbps": {
                "offer": "f5-big-ip-better",
                "sku": "f5-bigip-virtual-edition-25m-better-hourly"
            },
            "good1gbps": {
                "offer": "f5-big-ip-good",
                "sku": "f5-bigip-virtual-edition-1g-good-hourly"
            },
            "good10gbps": {
                "offer": "f5-big-ip-good",
                "sku": "f5-bigip-virtual-edition-10g-good-hourly"
            },
            "good200mbps": {
                "offer": "f5-big-ip-good",
                "sku": "f5-bigip-virtual-edition-200m-good-hourly"
            },
            "good25mbps": {
                "offer": "f5-big-ip-good",
                "sku": "f5-bigip-virtual-edition-25m-good-hourly"
            },
            "perappveadvancedwaf200mbps": {
                "offer": "f5-big-ip-per-app-ve",
                "sku": "f5-big-ip-per-app-ve-awf-200m-hourly"
            },
            "perappveadvancedwaf25mbps": {
                "offer": "f5-big-ip-per-app-ve",
                "sku": "f5-big-ip-per-app-ve-awf-25m-hourly"
            },
            "perappveltm200mbps": {
                "offer": "f5-big-ip-per-app-ve",
                "sku": "f5-big-ip-per-app-ve-ltm-200m-hourly"
            },
            "perappveltm25mbps": {
                "offer": "f5-big-ip-per-app-ve",
                "sku": "f5-big-ip-per-app-ve-ltm-25m-hourly"
            }
        },
        "externalLoadBalancerName": "[if(variables('useExistingLoadBalancer'), parameters('externalLoadBalancerName'), concat(variables('dnsLabel'),'-ext-alb'))]",
        "extLbId": "[resourceId('Microsoft.Network/loadBalancers',variables('externalLoadBalancerName'))]",
        "frontEndIPConfigID": "[concat(variables('extLbId'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
        "attachInternalLoadBalancer": "[not(empty(replace(parameters('internalLoadBalancerName'), 'OPTIONAL', '')))]",
        "internalLoadBalancerName": "[parameters('internalLoadBalancerName')]",
        "useExistingLoadBalancer": "[not(empty(replace(parameters('externalLoadBalancerName'), 'OPTIONAL', '')))]",
        "loadBalancerBackendAddressPoolsArray": [
            {
                "id": "[concat('/subscriptions/', variables('subscriptionID'),'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('externalLoadBalancerName'), '/backendAddressPools/loadBalancerBackEnd')]"
            },
            {
                "id": "[concat('/subscriptions/', variables('subscriptionID'),'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('internalLoadBalancerName'), '/backendAddressPools/loadBalancerBackEnd')]"
            }
        ],
        "useAvailabilityZones": "[and(variables('zonesAvailable'), equals(parameters('useAvailabilityZones'), 'Yes'))]",
        "vmssName": "[concat(parameters('dnsLabel'),'-vmss')]",
        "vmssId": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmssName'))]",
        "defaultAppInsightsLocation": "eastus",
        "appInsightsLocation": "[split(concat(parameters('appInsights'), ':', variables('defaultAppInsightsLocation')), ':')[1]]",
        "appInsightsName": "[replace(split(parameters('appInsights'), ':')[0], 'CREATE_NEW', concat(deployment().name, '-appinsights'))]",
        "appInsightsNameArray": "[split(concat(variables('appInsightsName'), ';', variables('resourceGroupName')) , ';')]",
        "scaleOutTimeWindow": "[concat('PT', parameters('scaleOutTimeWindow'), 'M')]",
        "scaleInTimeWindow": "[concat('PT', parameters('scaleInTimeWindow'), 'M')]",
        "cpuMetricName": "HOST_CPU",
        "throughputMetricName": "HOST_Traffic",
        "scaleMetricMap": {
            "HOST_CPU": {
                "metricName": "Percentage CPU",
                "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]",
                "thresholdIn": "[parameters('scaleInCpuThreshold')]",
                "thresholdOut": "[parameters('scaleOutCpuThreshold')]"
            },
            "HOST_Traffic": {
                "metricName": "Network In",
                "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]",
                "thresholdIn": "[parameters('scaleInThroughputThreshold')]",
                "thresholdOut": "[parameters('scaleOutThroughputThreshold')]"
            },
            "F5_TMM_CPU": {
                "metricName": "Percentage CPU",
                "metricResourceUri": "[resourceId(variables('appInsightsNameArray')[1], 'Microsoft.Insights/components', variables('appInsightsNameArray')[0])]",
                "thresholdIn": "[parameters('scaleInCpuThreshold')]",
                "thresholdOut": "[parameters('scaleOutCpuThreshold')]"
            },
            "F5_TMM_Traffic": {
                "metricName": "Network In",
                "metricResourceUri": "[resourceId(variables('appInsightsNameArray')[1], 'Microsoft.Insights/components', variables('appInsightsNameArray')[0])]",
                "thresholdIn": "[parameters('scaleInThroughputThreshold')]",
                "thresholdOut": "[parameters('scaleOutThroughputThreshold')]"
            }
        },
        "customEmailBaseArray": [
            ""
        ],
        "customEmail": "[skip(union(variables('customEmailBaseArray'), split(replace(parameters('notificationEmail'), 'OPTIONAL', ''), ';')), 1)]",
        "publicIpAddressConfiguration": {
            "name": "publicIp01",
            "properties": {
                "idleTimeoutInMinutes": 15
            }
        },
        "lbTcpProbeNameHttp": "tcp_probe_http",
        "lbTcpProbeIdHttp": "[concat(variables('extLbId'),'/probes/',variables('lbTcpProbeNameHttp'))]",
        "lbTcpProbeNameHttps": "tcp_probe_https",
        "lbTcpProbeIdHttps": "[concat(variables('extLbId'),'/probes/',variables('lbTcpProbeNameHttps'))]",
        "publicIPAddressType": "Static",
        "mgmtPublicIPAddressName": "[concat(variables('dnsLabel'), '-mgmt-pip')]",      
        "virtualNetworkName": "[concat(variables('dnsLabel'), '-vnet')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "mgmtSubnetName": "mgmt",
        "mgmtSubnetId": "[concat(variables('vnetId'), '/subnets/', variables('mgmtSubnetName'))]", 
        "vnetAddressPrefix": "[concat(parameters('vnetAddressPrefix'),'.0.0/16')]",
        "mgmtSubnetPrefix": "[concat(parameters('vnetAddressPrefix'), '.1.0/24')]",
        "appSubnetPrefix": "[concat(parameters('vnetAddressPrefix'), '.2.0/24')]",  
        "useExistingNsg": "[not(empty(replace(parameters('mgmtNsgName'), 'OPTIONAL', '')))]",
        "mgmtNsgName": "[if(variables('useExistingNsg'), parameters('mgmtNsgName'), concat(variables('dnsLabel'),'-mgmt-nsg'))]",
        "mgmtNsgID": "[resourceId('Microsoft.Network/networkSecurityGroups/',variables('mgmtNsgName'))]",    
        "keyVaultName": "[concat(variables('dnsLabel'), '-keyvault')]",
        "secretName": "[concat(variables('dnsLabel'), 'sdkey')]",
        "userAssignedIdentityName": "[concat(variables('dnsLabel'), '-useridentity')]",
        "serviceDiscoveryApiKey": "[replace(parameters('serviceDiscoveryApiKey'), 'OPTIONAL', '')]",
        "assignManagedIdentity": "[not(empty(variables('serviceDiscoveryApiKey')))]",
        "managedIdentityConfiguration": {
            "type": "userAssigned",
            "identityIds": [
                "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('userAssignedIdentityName'))]"
            ]
        },   
        "appSubnetName": "app",
        "mySqlPassword": "Ch@ng3m3!",
        "tagValues": "[parameters('tagValues')]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "condition": "[variables('assignManagedIdentity')]",
            "name": "accessTemplate",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/autoscale_access/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location":{ "value": "[variables('location')]" },
                    "keyVaultName":{ "value": "[variables('keyVaultName')]" },
                    "secretName":{ "value": "[variables('secretName')]" },
                    "userAssignedIdentityName":{ "value": "[variables('userAssignedIdentityName')]" }, 
                    "serviceDiscoveryApiKey":{ "value": "[variables('serviceDiscoveryApiKey')]" }                  
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "name": "networkTemplate",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/autoscale_network/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location":{ "value": "[variables('location')]" },
                    "virtualNetworkName":{ "value": "[variables('virtualNetworkName')]" },
                    "vnetAddressPrefix":{ "value": "[variables('vnetAddressPrefix')]" },
                    "mgmtSubnetName":{ "value": "[variables('mgmtSubnetName')]" },
                    "mgmtSubnetPrefix":{ "value": "[variables('mgmtSubnetPrefix')]" },
                    "appSubnetName":{ "value": "[variables('appSubnetName')]" },
                    "appSubnetPrefix":{ "value": "[variables('appSubnetPrefix')]" },
                    "provisionPublicIP":{ "value": "[parameters('provisionPublicIP')]" },
                    "mgmtNsgName":{ "value": "[variables('mgmtNsgName')]" },
                    "useExistingNsg":{ "value": "[variables('useExistingNsg')]" },                                 
                    "restrictedSrcAddress":{ "value": "[parameters('restrictedSrcAddress')]" },
                    "tagValues":{ "value": "[variables('tagValues')]" }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "name": "dagTemplate",
            "dependsOn": [
                "networkTemplate"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/autoscale_dag/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location":{ "value": "[variables('location')]" },
                    "dnsLabel":{ "value": "[variables('dnsLabel')]" },               
                    "useExistingLoadBalancer":{ "value": "[variables('useExistingLoadBalancer')]" },
                    "externalLoadBalancerName":{ "value": "[variables('externalLoadBalancerName')]" },
                    "publicIPAddressType":{ "value": "[variables('publicIPAddressType')]" },
                    "mgmtPublicIPAddressName":{ "value": "[variables('mgmtPublicIPAddressName')]" },
                    "frontEndIPConfigID":{ "value": "[variables('frontEndIPConfigID')]" },
                    "lbTcpProbeIdHttp":{ "value": "[variables('lbTcpProbeIdHttp')]" },
                    "lbTcpProbeIdHttps":{ "value": "[variables('lbTcpProbeIdHttps')]" },
                    "lbTcpProbeNameHttp":{ "value": "[variables('lbTcpProbeNameHttp')]" },
                    "lbTcpProbeNameHttps":{ "value": "[variables('lbTcpProbeNameHttps')]" },   
                    "tagValues":{ "value": "[variables('tagValues')]" }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "name": "bigipTemplate",
            "dependsOn": [
                "dagTemplate",
                "accessTemplate"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/autoscale_bigip/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {       
                    "location":{ "value": "[variables('location')]" },
                    "subscriptionID":{ "value": "[variables('subscriptionID')]" },         
                    "as3DeclarationUrl":{ "value": "[variables('as3DeclarationUrl')]" },
                    "dODeclarationUrl":{ "value": "[variables('dODeclarationUrl')]" },
                    "adminUsername":{ "value": "[parameters('adminUsername')]" },
                    "sshKey":{ "value": "[parameters('sshKey')]" },
                    "useCustomImage":{ "value": "[variables('useCustomImage')]" },
                    "createNewCustomImage":{ "value": "[variables('createNewCustomImage')]" },
                    "customImage":{ "value": "[variables('customImage')]" },
                    "newCustomImageName":{ "value": "[variables('newCustomImageName')]" },
                    "imagePlan":{ "value": "[variables('imagePlan')]" },
                    "instanceType":{ "value": "[parameters('instanceType')]" },
                    "premiumInstanceArray":{ "value": "[variables('premiumInstanceArray')]" },
                    "storageProfileArray":{ "value": "[variables('storageProfileArray')]" },
                    "provisionPublicIP":{ "value": "[parameters('provisionPublicIP')]" },
                    "publicIpAddressConfiguration":{ "value": "[variables('publicIpAddressConfiguration')]" }, 
                    "mgmtNsgId":{ "value": "[variables('mgmtNsgId')]" },
                    "mgmtSubnetId":{ "value": "[variables('mgmtSubnetId')]" },                    
                    "vmssName":{ "value": "[variables('vmssName')]" },
                    "externalLoadBalancerName":{ "value": "[variables('externalLoadBalancerName')]" },
                    "attachInternalLoadBalancer":{ "value": "[variables('attachInternalLoadBalancer')]" },                   
                    "loadBalancerBackendAddressPoolsArray":{ "value": "[variables('loadBalancerBackendAddressPoolsArray')]" },              
                    "useAvailabilityZones":{ "value": "[variables('useAvailabilityZones')]" },
                    "dnsLabel":{ "value": "[variables('dnsLabel')]" },
                    "vmssId":{ "value": "[variables('vmssId')]" },
                    "vmScaleSetMaxCount":{ "value": "[parameters('vmScaleSetMaxCount')]" },
                    "vmScaleSetMinCount":{ "value": "[parameters('vmScaleSetMinCount')]" },
                    "appInsights":{ "value": "[parameters('appInsights')]" },
                    "appInsightsLocation":{ "value": "[variables('appInsightsLocation')]" },
                    "appInsightsName":{ "value": "[variables('appInsightsName')]" },
                    "cpuMetricName":{ "value": "[variables('cpuMetricName')]" },
                    "throughputMetricName":{ "value": "[variables('throughputMetricName')]" },
                    "scaleInTimeWindow":{ "value": "[variables('scaleInTimeWindow')]" },    
                    "scaleOutTimeWindow":{ "value": "[variables('scaleOutTimeWindow')]" },
                    "scaleMetricMap":{ "value": "[variables('scaleMetricMap')]" },
                    "customEmail":{ "value": "[variables('customEmail')]" },
                    "assignManagedIdentity":{ "value": "[variables('assignManagedIdentity')]" },
                    "managedIdentityConfiguration":{ "value": "[variables('managedIdentityConfiguration')]" },
                    "tagValues":{ "value": "[variables('tagValues')]" }                                   
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "condition": "[equals(parameters('provisionApp'),'Yes')]",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "name": "appTemplate",
            "dependsOn": [
                "networkTemplate"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/application_example/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location":{ "value": "[variables('location')]" },
                    "dnsLabel":{ "value": "[concat(variables('dnsLabel'), 'app')]" },
                    "adminUsername":{ "value": "[parameters('adminUsername')]" },
                    "sshKey":{ "value": "[parameters('sshKey')]" },
                    "appVnetName":{ "value": "[variables('virtualNetworkName')]" },
                    "appSubnetName":{ "value": "[variables('appSubnetName')]" },                   
                    "storageAccountNamePrefix":{ "value": "[variables('dnsLabel')]" },
                    "mySqlPassword":{ "value": "[variables('mySqlPassword')]" }                   
                }
            }
        }
    ],
    "outputs": {
    }
}