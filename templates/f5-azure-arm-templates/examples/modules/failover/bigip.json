{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string"
      },
      "sshKey": {
        "type": "string"
      },
      "instanceName": {
        "type": "string"
      },
      "dnsLabel": {
        "type": "string"
      },
      "newDataStorageAccountName": {
          "type": "string"
      },
      "location": {
        "type": "string"
      },
      "licenseKey1": {
        "type": "string"
      },
      "licenseKey2": {
        "type": "string"
      },
      "useCustomImage": {
          "type": "string"
      },
      "imagePlan": {
          "type": "string"
      },
      "storageProfileArray": {
          "type": "array"
      },
      "selfNicConfigArray": {
        "type": "array"
      },
      "addtlNicConfigArray": {
        "type": "array"
      },
      "numberOfAdditionalNics": {
        "type": "string"
      },
      "instanceType": {
          "type": "string"
      },
      "tagValues": {
          "type": "object"
      },
      "availabilitySetId": {
        "type": "string"
      },
      "zonesAvailable": {
          "type": "string"
      }
    },
    "variables": {
      "computeApiVersion": "2017-12-01"
    },
    "resources": [
      {
        "apiVersion": "[variables('computeApiVersion')]",
        "location": "[parameters('location')]",
        "copy": {
          "name": "bigipCopy",
          "count": 2
        },
        "name": "[concat(parameters('dnsLabel'), '-', parameters('instanceName'), copyIndex())]",
        "plan": "[if(parameters('useCustomImage'), json('null'), parameters('imagePlan'))]",
        "properties": {
            "availabilitySet": "[if(not(parameters('zonesAvailable')), parameters('availabilitySetId'), json('null'))]",
            "diagnosticsProfile": {
                "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', parameters('newDataStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
                }
            },
            "hardwareProfile": {
                "vmSize": "[parameters('instanceType')]"
            },
            "networkProfile": {
                "networkInterfaces": "[concat(take(parameters('selfNicConfigArray')[copyIndex()], 3), take(parameters('addtlNicConfigArray')[concat('values', copyIndex())], parameters('numberOfAdditionalNics')))]"
            },
            "osProfile": {
              "adminUsername": "[parameters('adminUsername')]",
              "computerNamePrefix": "[parameters('instanceName')]",
              "linuxConfiguration": {
                "disablePasswordAuthentication": true,
                "ssh": {
                    "publicKeys": [
                        {
                            "keyData": "[parameters('sshKey')]",
                            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]"
                        }
                    ]
                }
              },
              "customData": "[base64(concat('#cloud-init\n\n write_files:\n - path: /config/cloud/onboard_config.yaml\n permissions: 0755\n owner: root:root\n content: |\n - name: 'LICENSE_KEY_1'\n value:', concat(parameters('licenseKey', copyIndex(1)), '\n extension_packages:\n install_operations:\n - extensionType: DO\n extensionVersion: latest\n - extensionType: AS3\n extensionVersion: latest\n - extensionType: TS\n extensionVersion: latest\n extension_services:\n service_operations:\n - extensionType: DO\n type: url\n value: !Ref DODeclarationUrl\n runcmd:\n curl --verify True https://cdn.f5.com/product/cloudsolutions/solution-scripts/install.sh | bash\n f5-onboarder -c /config/cloud/onboard_config.yaml'))]"
            },
            "storageProfile": "[if(parameters('useCustomImage'), parameters('storageProfileArray').customImage, parameters('storageProfileArray').platformImage)"
        },
        "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
        "zones": "[if(parameters('zonesAvailable'), array(copyIndex(1)), json('null'))]",
        "type": "Microsoft.Compute/virtualMachines"
    }
    ],
    "outputs": {
    }
  }